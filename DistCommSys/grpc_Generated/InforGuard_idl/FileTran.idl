// FileTran.idl

#include "Exception.idl"

module InforGuard
{
	interface FileTran
	{
		void Check() raises( ExceptionError );

		long GetFileBlock(
			inout netCallData callData, 
			in string filename, 
			in long long off, 
			out OctetSeq buf, 
			inout long len) 
			raises( ExceptionError );

		long PutFileBlock(
			inout netCallData callData, 
			in string filename, 
			in long long off, 
			in OctetSeq buf, 
			inout long len) 
			raises( ExceptionError );

		long MakeDirectory(
			inout netCallData callData, 
			in string filename, 
			in boolean temp) 
			raises( ExceptionError );

		long MoveFileIn(
			inout netCallData callData, 
			in string srcfile, 
			in string dstfile, 
			in string delfile, 
			in boolean bTopPath)
			raises( ExceptionError );

		long MoveFileOut(
			inout netCallData callData, 
			in string srcfile, 
			in string dstfile)
			raises( ExceptionError );

		long RenameFile(
			inout netCallData callData, 
			in string oldfile, 
			in string newfile, 
			in long attr)
			raises( ExceptionError );
			
		long QueryBasePath(
		    out string basepath)
		    raises( ExceptionError );

        	long isFileExist( 
			in string filePath,out long fileSize )
			raises( ExceptionError );

		long setFileTime(
			inout netCallData callData, 
			in string filename, 
			in long mtime) 
			raises( ExceptionError );
			
		long getFileTime(
			inout netCallData callData, 
			in string filename, 
			out long mtime) 
			raises( ExceptionError );

		long sendFileList(
			in RemoteDirectoryList list)
			raises( ExceptionError );
			
		long sendAccess()
			raises( ExceptionError );

		long checkFileList(
			in NetFileList inList,
			out ParamList notExistList,
			out ParamList diffList)
			raises( ExceptionError );
	};
};
