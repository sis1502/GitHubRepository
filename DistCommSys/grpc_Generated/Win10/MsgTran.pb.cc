// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgTran.proto

#include "MsgTran.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Metadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExceptionError_Metadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Metadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgBlock_Metadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Metadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_netIpPort_Metadata_2eproto;
namespace InforGuard_ {
class GetMsgReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMsgReq> _instance;
} _GetMsgReq_default_instance_;
class GetMsgResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMsgRes> _instance;
} _GetMsgRes_default_instance_;
class PutMsgReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PutMsgReq> _instance;
} _PutMsgReq_default_instance_;
class PutMsgResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PutMsgRes> _instance;
} _PutMsgRes_default_instance_;
}  // namespace InforGuard_
static void InitDefaultsscc_info_GetMsgReq_MsgTran_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_GetMsgReq_default_instance_;
    new (ptr) ::InforGuard_::GetMsgReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::GetMsgReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetMsgReq_MsgTran_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetMsgReq_MsgTran_2eproto}, {
      &scc_info_netIpPort_Metadata_2eproto.base,
      &scc_info_MsgBlock_Metadata_2eproto.base,}};

static void InitDefaultsscc_info_GetMsgRes_MsgTran_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_GetMsgRes_default_instance_;
    new (ptr) ::InforGuard_::GetMsgRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::GetMsgRes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetMsgRes_MsgTran_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetMsgRes_MsgTran_2eproto}, {
      &scc_info_ExceptionError_Metadata_2eproto.base,
      &scc_info_MsgBlock_Metadata_2eproto.base,}};

static void InitDefaultsscc_info_PutMsgReq_MsgTran_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_PutMsgReq_default_instance_;
    new (ptr) ::InforGuard_::PutMsgReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::PutMsgReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PutMsgReq_MsgTran_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PutMsgReq_MsgTran_2eproto}, {
      &scc_info_netIpPort_Metadata_2eproto.base,
      &scc_info_MsgBlock_Metadata_2eproto.base,}};

static void InitDefaultsscc_info_PutMsgRes_MsgTran_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_PutMsgRes_default_instance_;
    new (ptr) ::InforGuard_::PutMsgRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::PutMsgRes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PutMsgRes_MsgTran_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PutMsgRes_MsgTran_2eproto}, {
      &scc_info_ExceptionError_Metadata_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MsgTran_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_MsgTran_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MsgTran_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MsgTran_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::GetMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::GetMsgReq, seqipport_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::GetMsgReq, mb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::GetMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::GetMsgRes, ex_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::GetMsgRes, mb_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::GetMsgRes, ret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::PutMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::PutMsgReq, seqipport_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::PutMsgReq, mb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::PutMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::PutMsgRes, ex_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::PutMsgRes, ret_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::InforGuard_::GetMsgReq)},
  { 7, -1, sizeof(::InforGuard_::GetMsgRes)},
  { 15, -1, sizeof(::InforGuard_::PutMsgReq)},
  { 22, -1, sizeof(::InforGuard_::PutMsgRes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_GetMsgReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_GetMsgRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_PutMsgReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_PutMsgRes_default_instance_),
};

const char descriptor_table_protodef_MsgTran_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rMsgTran.proto\022\013InforGuard_\032\016Metadata.p"
  "roto\"Y\n\tGetMsgReq\022)\n\tseqIpPort\030\001 \003(\0132\026.I"
  "nforGuard_.netIpPort\022!\n\002mb\030\002 \001(\0132\025.Infor"
  "Guard_.MsgBlock\"d\n\tGetMsgRes\022\'\n\002ex\030\001 \001(\013"
  "2\033.InforGuard_.ExceptionError\022!\n\002mb\030\002 \001("
  "\0132\025.InforGuard_.MsgBlock\022\013\n\003ret\030\003 \001(\005\"Y\n"
  "\tPutMsgReq\022)\n\tseqIpPort\030\001 \003(\0132\026.InforGua"
  "rd_.netIpPort\022!\n\002mb\030\002 \001(\0132\025.InforGuard_."
  "MsgBlock\"A\n\tPutMsgRes\022\'\n\002ex\030\001 \001(\0132\033.Info"
  "rGuard_.ExceptionError\022\013\n\003ret\030\002 \001(\0052}\n\007M"
  "sgTran\0228\n\006GetMsg\022\026.InforGuard_.GetMsgReq"
  "\032\026.InforGuard_.GetMsgRes\0228\n\006PutMsg\022\026.Inf"
  "orGuard_.PutMsgReq\032\026.InforGuard_.PutMsgR"
  "esb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_MsgTran_2eproto_deps[1] = {
  &::descriptor_table_Metadata_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_MsgTran_2eproto_sccs[4] = {
  &scc_info_GetMsgReq_MsgTran_2eproto.base,
  &scc_info_GetMsgRes_MsgTran_2eproto.base,
  &scc_info_PutMsgReq_MsgTran_2eproto.base,
  &scc_info_PutMsgRes_MsgTran_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MsgTran_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MsgTran_2eproto = {
  false, false, descriptor_table_protodef_MsgTran_2eproto, "MsgTran.proto", 530,
  &descriptor_table_MsgTran_2eproto_once, descriptor_table_MsgTran_2eproto_sccs, descriptor_table_MsgTran_2eproto_deps, 4, 1,
  schemas, file_default_instances, TableStruct_MsgTran_2eproto::offsets,
  file_level_metadata_MsgTran_2eproto, 4, file_level_enum_descriptors_MsgTran_2eproto, file_level_service_descriptors_MsgTran_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MsgTran_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_MsgTran_2eproto)), true);
namespace InforGuard_ {

// ===================================================================

void GetMsgReq::InitAsDefaultInstance() {
  ::InforGuard_::_GetMsgReq_default_instance_._instance.get_mutable()->mb_ = const_cast< ::InforGuard_::MsgBlock*>(
      ::InforGuard_::MsgBlock::internal_default_instance());
}
class GetMsgReq::_Internal {
 public:
  static const ::InforGuard_::MsgBlock& mb(const GetMsgReq* msg);
};

const ::InforGuard_::MsgBlock&
GetMsgReq::_Internal::mb(const GetMsgReq* msg) {
  return *msg->mb_;
}
void GetMsgReq::clear_seqipport() {
  seqipport_.Clear();
}
void GetMsgReq::clear_mb() {
  if (GetArena() == nullptr && mb_ != nullptr) {
    delete mb_;
  }
  mb_ = nullptr;
}
GetMsgReq::GetMsgReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  seqipport_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.GetMsgReq)
}
GetMsgReq::GetMsgReq(const GetMsgReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seqipport_(from.seqipport_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mb()) {
    mb_ = new ::InforGuard_::MsgBlock(*from.mb_);
  } else {
    mb_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:InforGuard_.GetMsgReq)
}

void GetMsgReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMsgReq_MsgTran_2eproto.base);
  mb_ = nullptr;
}

GetMsgReq::~GetMsgReq() {
  // @@protoc_insertion_point(destructor:InforGuard_.GetMsgReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMsgReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mb_;
}

void GetMsgReq::ArenaDtor(void* object) {
  GetMsgReq* _this = reinterpret_cast< GetMsgReq* >(object);
  (void)_this;
}
void GetMsgReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMsgReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMsgReq& GetMsgReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMsgReq_MsgTran_2eproto.base);
  return *internal_default_instance();
}


void GetMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.GetMsgReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqipport_.Clear();
  if (GetArena() == nullptr && mb_ != nullptr) {
    delete mb_;
  }
  mb_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMsgReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .InforGuard_.netIpPort seqIpPort = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_seqipport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .InforGuard_.MsgBlock mb = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMsgReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.GetMsgReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_seqipport_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_seqipport(i), target, stream);
  }

  // .InforGuard_.MsgBlock mb = 2;
  if (this->has_mb()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mb(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.GetMsgReq)
  return target;
}

size_t GetMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.GetMsgReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  total_size += 1UL * this->_internal_seqipport_size();
  for (const auto& msg : this->seqipport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .InforGuard_.MsgBlock mb = 2;
  if (this->has_mb()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mb_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMsgReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.GetMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMsgReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMsgReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.GetMsgReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.GetMsgReq)
    MergeFrom(*source);
  }
}

void GetMsgReq::MergeFrom(const GetMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.GetMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seqipport_.MergeFrom(from.seqipport_);
  if (from.has_mb()) {
    _internal_mutable_mb()->::InforGuard_::MsgBlock::MergeFrom(from._internal_mb());
  }
}

void GetMsgReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.GetMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMsgReq::CopyFrom(const GetMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.GetMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMsgReq::IsInitialized() const {
  return true;
}

void GetMsgReq::InternalSwap(GetMsgReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seqipport_.InternalSwap(&other->seqipport_);
  swap(mb_, other->mb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMsgReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMsgRes::InitAsDefaultInstance() {
  ::InforGuard_::_GetMsgRes_default_instance_._instance.get_mutable()->ex_ = const_cast< ::InforGuard_::ExceptionError*>(
      ::InforGuard_::ExceptionError::internal_default_instance());
  ::InforGuard_::_GetMsgRes_default_instance_._instance.get_mutable()->mb_ = const_cast< ::InforGuard_::MsgBlock*>(
      ::InforGuard_::MsgBlock::internal_default_instance());
}
class GetMsgRes::_Internal {
 public:
  static const ::InforGuard_::ExceptionError& ex(const GetMsgRes* msg);
  static const ::InforGuard_::MsgBlock& mb(const GetMsgRes* msg);
};

const ::InforGuard_::ExceptionError&
GetMsgRes::_Internal::ex(const GetMsgRes* msg) {
  return *msg->ex_;
}
const ::InforGuard_::MsgBlock&
GetMsgRes::_Internal::mb(const GetMsgRes* msg) {
  return *msg->mb_;
}
void GetMsgRes::clear_ex() {
  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
}
void GetMsgRes::clear_mb() {
  if (GetArena() == nullptr && mb_ != nullptr) {
    delete mb_;
  }
  mb_ = nullptr;
}
GetMsgRes::GetMsgRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.GetMsgRes)
}
GetMsgRes::GetMsgRes(const GetMsgRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ex()) {
    ex_ = new ::InforGuard_::ExceptionError(*from.ex_);
  } else {
    ex_ = nullptr;
  }
  if (from._internal_has_mb()) {
    mb_ = new ::InforGuard_::MsgBlock(*from.mb_);
  } else {
    mb_ = nullptr;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:InforGuard_.GetMsgRes)
}

void GetMsgRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMsgRes_MsgTran_2eproto.base);
  ::memset(&ex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&ex_)) + sizeof(ret_));
}

GetMsgRes::~GetMsgRes() {
  // @@protoc_insertion_point(destructor:InforGuard_.GetMsgRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMsgRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ex_;
  if (this != internal_default_instance()) delete mb_;
}

void GetMsgRes::ArenaDtor(void* object) {
  GetMsgRes* _this = reinterpret_cast< GetMsgRes* >(object);
  (void)_this;
}
void GetMsgRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMsgRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMsgRes& GetMsgRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMsgRes_MsgTran_2eproto.base);
  return *internal_default_instance();
}


void GetMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.GetMsgRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
  if (GetArena() == nullptr && mb_ != nullptr) {
    delete mb_;
  }
  mb_ = nullptr;
  ret_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMsgRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .InforGuard_.ExceptionError ex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ex(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .InforGuard_.MsgBlock mb = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ret = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ret_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMsgRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.GetMsgRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ex(this), target, stream);
  }

  // .InforGuard_.MsgBlock mb = 2;
  if (this->has_mb()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mb(this), target, stream);
  }

  // int32 ret = 3;
  if (this->ret() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.GetMsgRes)
  return target;
}

size_t GetMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.GetMsgRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ex_);
  }

  // .InforGuard_.MsgBlock mb = 2;
  if (this->has_mb()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mb_);
  }

  // int32 ret = 3;
  if (this->ret() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMsgRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.GetMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMsgRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMsgRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.GetMsgRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.GetMsgRes)
    MergeFrom(*source);
  }
}

void GetMsgRes::MergeFrom(const GetMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.GetMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ex()) {
    _internal_mutable_ex()->::InforGuard_::ExceptionError::MergeFrom(from._internal_ex());
  }
  if (from.has_mb()) {
    _internal_mutable_mb()->::InforGuard_::MsgBlock::MergeFrom(from._internal_mb());
  }
  if (from.ret() != 0) {
    _internal_set_ret(from._internal_ret());
  }
}

void GetMsgRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.GetMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMsgRes::CopyFrom(const GetMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.GetMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMsgRes::IsInitialized() const {
  return true;
}

void GetMsgRes::InternalSwap(GetMsgRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMsgRes, ret_)
      + sizeof(GetMsgRes::ret_)
      - PROTOBUF_FIELD_OFFSET(GetMsgRes, ex_)>(
          reinterpret_cast<char*>(&ex_),
          reinterpret_cast<char*>(&other->ex_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMsgRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PutMsgReq::InitAsDefaultInstance() {
  ::InforGuard_::_PutMsgReq_default_instance_._instance.get_mutable()->mb_ = const_cast< ::InforGuard_::MsgBlock*>(
      ::InforGuard_::MsgBlock::internal_default_instance());
}
class PutMsgReq::_Internal {
 public:
  static const ::InforGuard_::MsgBlock& mb(const PutMsgReq* msg);
};

const ::InforGuard_::MsgBlock&
PutMsgReq::_Internal::mb(const PutMsgReq* msg) {
  return *msg->mb_;
}
void PutMsgReq::clear_seqipport() {
  seqipport_.Clear();
}
void PutMsgReq::clear_mb() {
  if (GetArena() == nullptr && mb_ != nullptr) {
    delete mb_;
  }
  mb_ = nullptr;
}
PutMsgReq::PutMsgReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  seqipport_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.PutMsgReq)
}
PutMsgReq::PutMsgReq(const PutMsgReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seqipport_(from.seqipport_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mb()) {
    mb_ = new ::InforGuard_::MsgBlock(*from.mb_);
  } else {
    mb_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:InforGuard_.PutMsgReq)
}

void PutMsgReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PutMsgReq_MsgTran_2eproto.base);
  mb_ = nullptr;
}

PutMsgReq::~PutMsgReq() {
  // @@protoc_insertion_point(destructor:InforGuard_.PutMsgReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PutMsgReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete mb_;
}

void PutMsgReq::ArenaDtor(void* object) {
  PutMsgReq* _this = reinterpret_cast< PutMsgReq* >(object);
  (void)_this;
}
void PutMsgReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PutMsgReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PutMsgReq& PutMsgReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PutMsgReq_MsgTran_2eproto.base);
  return *internal_default_instance();
}


void PutMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.PutMsgReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqipport_.Clear();
  if (GetArena() == nullptr && mb_ != nullptr) {
    delete mb_;
  }
  mb_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutMsgReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .InforGuard_.netIpPort seqIpPort = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_seqipport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .InforGuard_.MsgBlock mb = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PutMsgReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.PutMsgReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_seqipport_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_seqipport(i), target, stream);
  }

  // .InforGuard_.MsgBlock mb = 2;
  if (this->has_mb()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mb(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.PutMsgReq)
  return target;
}

size_t PutMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.PutMsgReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  total_size += 1UL * this->_internal_seqipport_size();
  for (const auto& msg : this->seqipport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .InforGuard_.MsgBlock mb = 2;
  if (this->has_mb()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mb_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutMsgReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.PutMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PutMsgReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PutMsgReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.PutMsgReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.PutMsgReq)
    MergeFrom(*source);
  }
}

void PutMsgReq::MergeFrom(const PutMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.PutMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seqipport_.MergeFrom(from.seqipport_);
  if (from.has_mb()) {
    _internal_mutable_mb()->::InforGuard_::MsgBlock::MergeFrom(from._internal_mb());
  }
}

void PutMsgReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.PutMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutMsgReq::CopyFrom(const PutMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.PutMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutMsgReq::IsInitialized() const {
  return true;
}

void PutMsgReq::InternalSwap(PutMsgReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seqipport_.InternalSwap(&other->seqipport_);
  swap(mb_, other->mb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutMsgReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PutMsgRes::InitAsDefaultInstance() {
  ::InforGuard_::_PutMsgRes_default_instance_._instance.get_mutable()->ex_ = const_cast< ::InforGuard_::ExceptionError*>(
      ::InforGuard_::ExceptionError::internal_default_instance());
}
class PutMsgRes::_Internal {
 public:
  static const ::InforGuard_::ExceptionError& ex(const PutMsgRes* msg);
};

const ::InforGuard_::ExceptionError&
PutMsgRes::_Internal::ex(const PutMsgRes* msg) {
  return *msg->ex_;
}
void PutMsgRes::clear_ex() {
  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
}
PutMsgRes::PutMsgRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.PutMsgRes)
}
PutMsgRes::PutMsgRes(const PutMsgRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ex()) {
    ex_ = new ::InforGuard_::ExceptionError(*from.ex_);
  } else {
    ex_ = nullptr;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:InforGuard_.PutMsgRes)
}

void PutMsgRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PutMsgRes_MsgTran_2eproto.base);
  ::memset(&ex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&ex_)) + sizeof(ret_));
}

PutMsgRes::~PutMsgRes() {
  // @@protoc_insertion_point(destructor:InforGuard_.PutMsgRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PutMsgRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ex_;
}

void PutMsgRes::ArenaDtor(void* object) {
  PutMsgRes* _this = reinterpret_cast< PutMsgRes* >(object);
  (void)_this;
}
void PutMsgRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PutMsgRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PutMsgRes& PutMsgRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PutMsgRes_MsgTran_2eproto.base);
  return *internal_default_instance();
}


void PutMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.PutMsgRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
  ret_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutMsgRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .InforGuard_.ExceptionError ex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ex(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ret_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PutMsgRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.PutMsgRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ex(this), target, stream);
  }

  // int32 ret = 2;
  if (this->ret() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.PutMsgRes)
  return target;
}

size_t PutMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.PutMsgRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ex_);
  }

  // int32 ret = 2;
  if (this->ret() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PutMsgRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.PutMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const PutMsgRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PutMsgRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.PutMsgRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.PutMsgRes)
    MergeFrom(*source);
  }
}

void PutMsgRes::MergeFrom(const PutMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.PutMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ex()) {
    _internal_mutable_ex()->::InforGuard_::ExceptionError::MergeFrom(from._internal_ex());
  }
  if (from.ret() != 0) {
    _internal_set_ret(from._internal_ret());
  }
}

void PutMsgRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.PutMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutMsgRes::CopyFrom(const PutMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.PutMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutMsgRes::IsInitialized() const {
  return true;
}

void PutMsgRes::InternalSwap(PutMsgRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutMsgRes, ret_)
      + sizeof(PutMsgRes::ret_)
      - PROTOBUF_FIELD_OFFSET(PutMsgRes, ex_)>(
          reinterpret_cast<char*>(&ex_),
          reinterpret_cast<char*>(&other->ex_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutMsgRes::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace InforGuard_
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::InforGuard_::GetMsgReq* Arena::CreateMaybeMessage< ::InforGuard_::GetMsgReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::GetMsgReq >(arena);
}
template<> PROTOBUF_NOINLINE ::InforGuard_::GetMsgRes* Arena::CreateMaybeMessage< ::InforGuard_::GetMsgRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::GetMsgRes >(arena);
}
template<> PROTOBUF_NOINLINE ::InforGuard_::PutMsgReq* Arena::CreateMaybeMessage< ::InforGuard_::PutMsgReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::PutMsgReq >(arena);
}
template<> PROTOBUF_NOINLINE ::InforGuard_::PutMsgRes* Arena::CreateMaybeMessage< ::InforGuard_::PutMsgRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::PutMsgRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
