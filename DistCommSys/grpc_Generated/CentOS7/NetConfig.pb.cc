// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetConfig.proto

#include "NetConfig.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Metadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExceptionError_Metadata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Metadata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_netIpPort_Metadata_2eproto;
namespace InforGuard_ {
class LoadReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadReq> _instance;
} _LoadReq_default_instance_;
class LoadResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadRes> _instance;
} _LoadRes_default_instance_;
class SaveReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveReq> _instance;
} _SaveReq_default_instance_;
class SaveResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SaveRes> _instance;
} _SaveRes_default_instance_;
}  // namespace InforGuard_
static void InitDefaultsscc_info_LoadReq_NetConfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_LoadReq_default_instance_;
    new (ptr) ::InforGuard_::LoadReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::LoadReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoadReq_NetConfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoadReq_NetConfig_2eproto}, {
      &scc_info_netIpPort_Metadata_2eproto.base,}};

static void InitDefaultsscc_info_LoadRes_NetConfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_LoadRes_default_instance_;
    new (ptr) ::InforGuard_::LoadRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::LoadRes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoadRes_NetConfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoadRes_NetConfig_2eproto}, {
      &scc_info_ExceptionError_Metadata_2eproto.base,}};

static void InitDefaultsscc_info_SaveReq_NetConfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_SaveReq_default_instance_;
    new (ptr) ::InforGuard_::SaveReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::SaveReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SaveReq_NetConfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SaveReq_NetConfig_2eproto}, {
      &scc_info_netIpPort_Metadata_2eproto.base,}};

static void InitDefaultsscc_info_SaveRes_NetConfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::InforGuard_::_SaveRes_default_instance_;
    new (ptr) ::InforGuard_::SaveRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InforGuard_::SaveRes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SaveRes_NetConfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SaveRes_NetConfig_2eproto}, {
      &scc_info_ExceptionError_Metadata_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_NetConfig_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_NetConfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_NetConfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_NetConfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::LoadReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::LoadReq, seqipport_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::LoadReq, cfgfilename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::LoadRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::LoadRes, ex_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::LoadRes, cfgfilecontent_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::LoadRes, ret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::SaveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::SaveReq, seqipport_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::SaveReq, cfgfilename_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::SaveReq, cfgfilecontent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::SaveRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::InforGuard_::SaveRes, ex_),
  PROTOBUF_FIELD_OFFSET(::InforGuard_::SaveRes, ret_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::InforGuard_::LoadReq)},
  { 7, -1, sizeof(::InforGuard_::LoadRes)},
  { 15, -1, sizeof(::InforGuard_::SaveReq)},
  { 23, -1, sizeof(::InforGuard_::SaveRes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_LoadReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_LoadRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_SaveReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::InforGuard_::_SaveRes_default_instance_),
};

const char descriptor_table_protodef_NetConfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017NetConfig.proto\022\013InforGuard_\032\016Metadata"
  ".proto\"I\n\007LoadReq\022)\n\tseqIpPort\030\001 \003(\0132\026.I"
  "nforGuard_.netIpPort\022\023\n\013cfgFileName\030\002 \001("
  "\014\"W\n\007LoadRes\022\'\n\002ex\030\001 \001(\0132\033.InforGuard_.E"
  "xceptionError\022\026\n\016cfgFileContent\030\002 \001(\014\022\013\n"
  "\003ret\030\003 \001(\005\"a\n\007SaveReq\022)\n\tseqIpPort\030\001 \003(\013"
  "2\026.InforGuard_.netIpPort\022\023\n\013cfgFileName\030"
  "\002 \001(\014\022\026\n\016cfgFileContent\030\003 \001(\014\"\?\n\007SaveRes"
  "\022\'\n\002ex\030\001 \001(\0132\033.InforGuard_.ExceptionErro"
  "r\022\013\n\003ret\030\002 \001(\0052s\n\tNetConfig\0222\n\004Load\022\024.In"
  "forGuard_.LoadReq\032\024.InforGuard_.LoadRes\022"
  "2\n\004Save\022\024.InforGuard_.SaveReq\032\024.InforGua"
  "rd_.SaveResb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_NetConfig_2eproto_deps[1] = {
  &::descriptor_table_Metadata_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_NetConfig_2eproto_sccs[4] = {
  &scc_info_LoadReq_NetConfig_2eproto.base,
  &scc_info_LoadRes_NetConfig_2eproto.base,
  &scc_info_SaveReq_NetConfig_2eproto.base,
  &scc_info_SaveRes_NetConfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_NetConfig_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_NetConfig_2eproto = {
  false, false, descriptor_table_protodef_NetConfig_2eproto, "NetConfig.proto", 499,
  &descriptor_table_NetConfig_2eproto_once, descriptor_table_NetConfig_2eproto_sccs, descriptor_table_NetConfig_2eproto_deps, 4, 1,
  schemas, file_default_instances, TableStruct_NetConfig_2eproto::offsets,
  file_level_metadata_NetConfig_2eproto, 4, file_level_enum_descriptors_NetConfig_2eproto, file_level_service_descriptors_NetConfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_NetConfig_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_NetConfig_2eproto)), true);
namespace InforGuard_ {

// ===================================================================

void LoadReq::InitAsDefaultInstance() {
}
class LoadReq::_Internal {
 public:
};

void LoadReq::clear_seqipport() {
  seqipport_.Clear();
}
LoadReq::LoadReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  seqipport_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.LoadReq)
}
LoadReq::LoadReq(const LoadReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seqipport_(from.seqipport_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cfgfilename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cfgfilename().empty()) {
    cfgfilename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cfgfilename(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:InforGuard_.LoadReq)
}

void LoadReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadReq_NetConfig_2eproto.base);
  cfgfilename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LoadReq::~LoadReq() {
  // @@protoc_insertion_point(destructor:InforGuard_.LoadReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cfgfilename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoadReq::ArenaDtor(void* object) {
  LoadReq* _this = reinterpret_cast< LoadReq* >(object);
  (void)_this;
}
void LoadReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadReq& LoadReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadReq_NetConfig_2eproto.base);
  return *internal_default_instance();
}


void LoadReq::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.LoadReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqipport_.Clear();
  cfgfilename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .InforGuard_.netIpPort seqIpPort = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_seqipport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bytes cfgFileName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_cfgfilename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.LoadReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_seqipport_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_seqipport(i), target, stream);
  }

  // bytes cfgFileName = 2;
  if (this->cfgfilename().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cfgfilename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.LoadReq)
  return target;
}

size_t LoadReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.LoadReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  total_size += 1UL * this->_internal_seqipport_size();
  for (const auto& msg : this->seqipport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes cfgFileName = 2;
  if (this->cfgfilename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cfgfilename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.LoadReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.LoadReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.LoadReq)
    MergeFrom(*source);
  }
}

void LoadReq::MergeFrom(const LoadReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.LoadReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seqipport_.MergeFrom(from.seqipport_);
  if (from.cfgfilename().size() > 0) {
    _internal_set_cfgfilename(from._internal_cfgfilename());
  }
}

void LoadReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.LoadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadReq::CopyFrom(const LoadReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.LoadReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadReq::IsInitialized() const {
  return true;
}

void LoadReq::InternalSwap(LoadReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seqipport_.InternalSwap(&other->seqipport_);
  cfgfilename_.Swap(&other->cfgfilename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadRes::InitAsDefaultInstance() {
  ::InforGuard_::_LoadRes_default_instance_._instance.get_mutable()->ex_ = const_cast< ::InforGuard_::ExceptionError*>(
      ::InforGuard_::ExceptionError::internal_default_instance());
}
class LoadRes::_Internal {
 public:
  static const ::InforGuard_::ExceptionError& ex(const LoadRes* msg);
};

const ::InforGuard_::ExceptionError&
LoadRes::_Internal::ex(const LoadRes* msg) {
  return *msg->ex_;
}
void LoadRes::clear_ex() {
  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
}
LoadRes::LoadRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.LoadRes)
}
LoadRes::LoadRes(const LoadRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cfgfilecontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cfgfilecontent().empty()) {
    cfgfilecontent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cfgfilecontent(),
      GetArena());
  }
  if (from._internal_has_ex()) {
    ex_ = new ::InforGuard_::ExceptionError(*from.ex_);
  } else {
    ex_ = nullptr;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:InforGuard_.LoadRes)
}

void LoadRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadRes_NetConfig_2eproto.base);
  cfgfilecontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&ex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&ex_)) + sizeof(ret_));
}

LoadRes::~LoadRes() {
  // @@protoc_insertion_point(destructor:InforGuard_.LoadRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cfgfilecontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ex_;
}

void LoadRes::ArenaDtor(void* object) {
  LoadRes* _this = reinterpret_cast< LoadRes* >(object);
  (void)_this;
}
void LoadRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadRes& LoadRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadRes_NetConfig_2eproto.base);
  return *internal_default_instance();
}


void LoadRes::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.LoadRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cfgfilecontent_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
  ret_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .InforGuard_.ExceptionError ex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ex(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes cfgFileContent = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_cfgfilecontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ret = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ret_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.LoadRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ex(this), target, stream);
  }

  // bytes cfgFileContent = 2;
  if (this->cfgfilecontent().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cfgfilecontent(), target);
  }

  // int32 ret = 3;
  if (this->ret() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.LoadRes)
  return target;
}

size_t LoadRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.LoadRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes cfgFileContent = 2;
  if (this->cfgfilecontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cfgfilecontent());
  }

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ex_);
  }

  // int32 ret = 3;
  if (this->ret() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.LoadRes)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.LoadRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.LoadRes)
    MergeFrom(*source);
  }
}

void LoadRes::MergeFrom(const LoadRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.LoadRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cfgfilecontent().size() > 0) {
    _internal_set_cfgfilecontent(from._internal_cfgfilecontent());
  }
  if (from.has_ex()) {
    _internal_mutable_ex()->::InforGuard_::ExceptionError::MergeFrom(from._internal_ex());
  }
  if (from.ret() != 0) {
    _internal_set_ret(from._internal_ret());
  }
}

void LoadRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.LoadRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadRes::CopyFrom(const LoadRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.LoadRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadRes::IsInitialized() const {
  return true;
}

void LoadRes::InternalSwap(LoadRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cfgfilecontent_.Swap(&other->cfgfilecontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadRes, ret_)
      + sizeof(LoadRes::ret_)
      - PROTOBUF_FIELD_OFFSET(LoadRes, ex_)>(
          reinterpret_cast<char*>(&ex_),
          reinterpret_cast<char*>(&other->ex_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SaveReq::InitAsDefaultInstance() {
}
class SaveReq::_Internal {
 public:
};

void SaveReq::clear_seqipport() {
  seqipport_.Clear();
}
SaveReq::SaveReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  seqipport_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.SaveReq)
}
SaveReq::SaveReq(const SaveReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seqipport_(from.seqipport_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cfgfilename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cfgfilename().empty()) {
    cfgfilename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cfgfilename(),
      GetArena());
  }
  cfgfilecontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cfgfilecontent().empty()) {
    cfgfilecontent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cfgfilecontent(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:InforGuard_.SaveReq)
}

void SaveReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SaveReq_NetConfig_2eproto.base);
  cfgfilename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cfgfilecontent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SaveReq::~SaveReq() {
  // @@protoc_insertion_point(destructor:InforGuard_.SaveReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SaveReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cfgfilename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cfgfilecontent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SaveReq::ArenaDtor(void* object) {
  SaveReq* _this = reinterpret_cast< SaveReq* >(object);
  (void)_this;
}
void SaveReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SaveReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveReq& SaveReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SaveReq_NetConfig_2eproto.base);
  return *internal_default_instance();
}


void SaveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.SaveReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seqipport_.Clear();
  cfgfilename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cfgfilecontent_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .InforGuard_.netIpPort seqIpPort = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_seqipport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bytes cfgFileName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_cfgfilename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes cfgFileContent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_cfgfilecontent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaveReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.SaveReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_seqipport_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_seqipport(i), target, stream);
  }

  // bytes cfgFileName = 2;
  if (this->cfgfilename().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_cfgfilename(), target);
  }

  // bytes cfgFileContent = 3;
  if (this->cfgfilecontent().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_cfgfilecontent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.SaveReq)
  return target;
}

size_t SaveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.SaveReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .InforGuard_.netIpPort seqIpPort = 1;
  total_size += 1UL * this->_internal_seqipport_size();
  for (const auto& msg : this->seqipport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes cfgFileName = 2;
  if (this->cfgfilename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cfgfilename());
  }

  // bytes cfgFileContent = 3;
  if (this->cfgfilecontent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_cfgfilecontent());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.SaveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SaveReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.SaveReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.SaveReq)
    MergeFrom(*source);
  }
}

void SaveReq::MergeFrom(const SaveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.SaveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seqipport_.MergeFrom(from.seqipport_);
  if (from.cfgfilename().size() > 0) {
    _internal_set_cfgfilename(from._internal_cfgfilename());
  }
  if (from.cfgfilecontent().size() > 0) {
    _internal_set_cfgfilecontent(from._internal_cfgfilecontent());
  }
}

void SaveReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.SaveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveReq::CopyFrom(const SaveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.SaveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveReq::IsInitialized() const {
  return true;
}

void SaveReq::InternalSwap(SaveReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  seqipport_.InternalSwap(&other->seqipport_);
  cfgfilename_.Swap(&other->cfgfilename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cfgfilecontent_.Swap(&other->cfgfilecontent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SaveRes::InitAsDefaultInstance() {
  ::InforGuard_::_SaveRes_default_instance_._instance.get_mutable()->ex_ = const_cast< ::InforGuard_::ExceptionError*>(
      ::InforGuard_::ExceptionError::internal_default_instance());
}
class SaveRes::_Internal {
 public:
  static const ::InforGuard_::ExceptionError& ex(const SaveRes* msg);
};

const ::InforGuard_::ExceptionError&
SaveRes::_Internal::ex(const SaveRes* msg) {
  return *msg->ex_;
}
void SaveRes::clear_ex() {
  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
}
SaveRes::SaveRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:InforGuard_.SaveRes)
}
SaveRes::SaveRes(const SaveRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ex()) {
    ex_ = new ::InforGuard_::ExceptionError(*from.ex_);
  } else {
    ex_ = nullptr;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:InforGuard_.SaveRes)
}

void SaveRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SaveRes_NetConfig_2eproto.base);
  ::memset(&ex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&ex_)) + sizeof(ret_));
}

SaveRes::~SaveRes() {
  // @@protoc_insertion_point(destructor:InforGuard_.SaveRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SaveRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete ex_;
}

void SaveRes::ArenaDtor(void* object) {
  SaveRes* _this = reinterpret_cast< SaveRes* >(object);
  (void)_this;
}
void SaveRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SaveRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SaveRes& SaveRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SaveRes_NetConfig_2eproto.base);
  return *internal_default_instance();
}


void SaveRes::Clear() {
// @@protoc_insertion_point(message_clear_start:InforGuard_.SaveRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && ex_ != nullptr) {
    delete ex_;
  }
  ex_ = nullptr;
  ret_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaveRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .InforGuard_.ExceptionError ex = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ex(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ret = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ret_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaveRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InforGuard_.SaveRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ex(this), target, stream);
  }

  // int32 ret = 2;
  if (this->ret() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_ret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InforGuard_.SaveRes)
  return target;
}

size_t SaveRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InforGuard_.SaveRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .InforGuard_.ExceptionError ex = 1;
  if (this->has_ex()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ex_);
  }

  // int32 ret = 2;
  if (this->ret() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ret());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SaveRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InforGuard_.SaveRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SaveRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SaveRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InforGuard_.SaveRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InforGuard_.SaveRes)
    MergeFrom(*source);
  }
}

void SaveRes::MergeFrom(const SaveRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InforGuard_.SaveRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ex()) {
    _internal_mutable_ex()->::InforGuard_::ExceptionError::MergeFrom(from._internal_ex());
  }
  if (from.ret() != 0) {
    _internal_set_ret(from._internal_ret());
  }
}

void SaveRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InforGuard_.SaveRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SaveRes::CopyFrom(const SaveRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InforGuard_.SaveRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaveRes::IsInitialized() const {
  return true;
}

void SaveRes::InternalSwap(SaveRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SaveRes, ret_)
      + sizeof(SaveRes::ret_)
      - PROTOBUF_FIELD_OFFSET(SaveRes, ex_)>(
          reinterpret_cast<char*>(&ex_),
          reinterpret_cast<char*>(&other->ex_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SaveRes::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace InforGuard_
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::InforGuard_::LoadReq* Arena::CreateMaybeMessage< ::InforGuard_::LoadReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::LoadReq >(arena);
}
template<> PROTOBUF_NOINLINE ::InforGuard_::LoadRes* Arena::CreateMaybeMessage< ::InforGuard_::LoadRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::LoadRes >(arena);
}
template<> PROTOBUF_NOINLINE ::InforGuard_::SaveReq* Arena::CreateMaybeMessage< ::InforGuard_::SaveReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::SaveReq >(arena);
}
template<> PROTOBUF_NOINLINE ::InforGuard_::SaveRes* Arena::CreateMaybeMessage< ::InforGuard_::SaveRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InforGuard_::SaveRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
